// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include <Joystick.h>
#include <OI.h>
#include <Subsystems/DriveTrain.h>
#include <cstdbool>
#include <memory>

#define DEADBAND 0.05
#include "Drive.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

Drive::Drive() :
		Command() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::driveTrain.get());
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void Drive::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void Drive::Execute() {
	float joystickLeftY = Robot::oi->getJoystickLeft()->GetY();
	float joystickRightY = Robot::oi->getJoystickRight()->GetY();

	Deadband(joystickLeftY);
	Deadband(joystickRightY);

	Robot::driveTrain->DriveCommand(joystickRightY, joystickLeftY);
}

// Make this return true when this Command no longer needs to run execute()
bool Drive::IsFinished() {
	return false;
}

// Called once after isFinished returns true
void Drive::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void Drive::Interrupted() {

}

float Drive::Deadband(float joystick) {
	if (joystick < DEADBAND && joystick > -DEADBAND) {
		joystick = 0;
	} else {
		Scale(joystick);
	}
	return joystick;
}

float Drive::Scale(float joystick) {
	if (joystick < 0)
		joystick += DEADBAND;
	else
		joystick -= DEADBAND;

	joystick = joystick / (1 - DEADBAND);

	return joystick;
}

